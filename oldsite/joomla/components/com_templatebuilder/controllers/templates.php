<?php
/**
 * @version		1.0.0 Templatebuilder $
 * @package		Templatebuilder
 * @copyright	Copyright Â© 2012 - All rights reserved.
 * @license		GNU/GPL
 * @author		Nate Mason
 * @author mail	nate@fargodesignco.com
 *
 *
 * @MVC architecture generated by MVC generator tool at http://www.alphaplug.com
 */

// no direct access
defined('_JEXEC') or die('Restricted access');

jimport('joomla.application.component.controller');






class TemplatebuilderControllerTemplates extends TemplatebuilderController
{


	function display()
	{
	
		$viewLayout= JRequest::getVar( 'layout', 'default');
		$task = (isset($this->the_task)) ?  $this->the_task : "display";
	
		$view = & $this->getView("templates");
		
		// Get/Create the model
		if ($model = & $this->getModel("templates")) {
				// Push the model into the view (as default)
			   $view->setModel($model, true);
		}
		$view->setLayout($viewLayout);
		$view->$task();   
	}
	
	
	function details(){
		$this->the_task = "details";
		$this->display();
	}
	
	function add(){
		$this->the_task = "add";
		$this->display();
	}
	
	
	function generate(){
		jimport( 'joomla.filesystem.folder' );
		require(JPATH_COMPONENT . DS . 'helper.php');
		
		$id = JRequest::getVar("id",false);
		if(!$id){
			$this->display();
			return false;
		}
		
		$model = & $this->getModel('templates');
		
		$template = $model->getTemplate($id);
		
		
		if($template->createStructure(JRequest::getVar("fonts",array()))){
			if($template->archive()){
				$file = $template->tmpdir.".zip";
				$file_name = basename($file);
				header("Content-Type: application/zip");
				header("Content-Disposition: attachment; filename=$file_name");
				header("Content-Length: " . filesize($file));
				readfile($file);
				exit;
			}else{
				die("Archive Failed");
			}
		}else{
			die("Structure Failed");
		}
		
		
		
		
		exit();
	}
	
	function save(){
		$user = AcademyUserHelper::getCurrentUser();
		
		if(!$user->isAuth("add_file")){
			JError::raiseError(500,"You Do Not Have Permission Upload Files");
		}
		
	   $data = JRequest::get("post",JREQUEST_ALLOWHTML);
	   $data['description'] = $data['desc'];
	   
	   $model = & $this->getModel('templates');
	   
	   if($data['dshare_task'] == "update"){
       		$model->update($data,"templatebuilder_templates");
	   }else{
	   		$model->insert($data,"templatebuilder_templates");
	   }
	   
	   $redirectTo = $this->generateRedirect();
       $this->setRedirect($redirectTo, 'Document Saved!');          
	   
	   
	}
	
	function download(){
		$user = AcademyUserHelper::getCurrentUser();
		if($user->isGuest()){
			JError::raiseError(401,"You Are Not Authorized to View This Resource");
		}
		$id = JRequest::getVar("docid",false);
		if(!$id){
			JError::raiseError(400,"Missing Parameters");
		}
		
		$model = & $this->getModel('templates');
		$doc = $model->getDocument($id);
		if(empty($doc) || !file_exists($doc->filename)){
			JError::raiseError(400,"Document Not Found");
		}
		$model->updateDownloads($id);
		
	
		$fp = fopen($doc->filename, 'rb');
		
		// send the right headers
		/*var_dump(AcademyFileHelper::getType($doc->filename));
		echo "<br /><br />";
		var_dump(filesize($doc->filename));
		echo "<br /><br />";
		var_dump(basename($doc->filename));
		exit();*/
		header("Content-Type: ".AcademyFileHelper::getType($doc->filename));
		header("Content-Length: " . filesize($doc->filename));
		header("Content-Name: " . basename($doc->filename));
		
		// dump the picture and stop the script
		fpassthru($fp);
		exit;
		
		/*$config = JFactory::getConfig();
		$path =  $config->get("tmp_path");
		$ext = AcademyFileHelper::getExtension($doc->filename);
		$fname = md5($doc->filename)."_".time().".".$ext;
		
		copy($doc->filename();
		
		echo $path.DS.$fname;*/
		
		
	}
	
	function download2(){
		$user = AcademyUserHelper::getCurrentUser();
		if($user->isGuest()){
			JError::raiseError(401,"You Are Not Authorized to View This Resource");
		}
		$id = JRequest::getVar("docid",false);
		if(!$id){
			JError::raiseError(400,"Missing Parameters");
		}
		
		$model = & $this->getModel('templates');
		$doc = $model->getDocument($id);
		if(empty($doc) || !file_exists($doc->filename)){
			JError::raiseError(400,"Document Not Found");
		}
		
	
		$fp = fopen($doc->filename, 'rb');
		$content_type = AcademyFileHelper::get_mime_type($doc->filename);
		
		echo $content_type;
		//exit();
		// send the right headers
		
		header("Content-Type: ".AcademyFileHelper::getType($doc->filename));
		header("Content-Length: " . filesize($doc->filename));
		header("Content-Name: " . dirname($doc->filename));
		
		// dump the picture and stop the script
		fpassthru($fp);
		exit;
		
		/*$config = JFactory::getConfig();
		$path =  $config->get("tmp_path");
		$ext = AcademyFileHelper::getExtension($doc->filename);
		$fname = md5($doc->filename)."_".time().".".$ext;
		
		copy($doc->filename();
		
		echo $path.DS.$fname;*/
		
		
	}
	
	
	function download3(){
		$user = AcademyUserHelper::getCurrentUser();
		if($user->isGuest()){
			JError::raiseError(401,"You Are Not Authorized to View This Resource");
		}
		$id = JRequest::getVar("docid",false);
		$format = JRequest::getVar("vformat","mp4");
		
		
		if(!$id){
			JError::raiseError(400,"Missing Parameters");
		}
		
		$model = & $this->getModel('templates');
		$doc = $model->getDocument($id);
		
		/*echo $doc->filename;
		echo "<br />";*/
		$tmppath = str_replace("/var/www/vhosts/thesanctuaryinstitute.org/subdomains/academy/cgi-bin/files/","/var/www/vhosts/thesanctuaryinstitute.org/subdomains/academy/httpdocs/tmp/videos/files/",$doc->filename);
		$basename = basename($tmppath);
		/*echo $basename;
		echo "<br />";*/
		$stem = AcademyFileHelper::stripExtension($basename);
		$newname = $stem.".".$format;
		
		$new_loc = str_replace($basename,$newname,$tmppath);
		
		$doc->filename = $new_loc;
		
		if(empty($doc) || !file_exists($doc->filename)){
			JError::raiseError(400,"Document Not Found");
		}
		
		
		
	
		$fp = fopen($doc->filename, 'rb');
		//echo $doc->filename;
		$finfo = finfo_open(FILEINFO_MIME);	
		//echo finfo_file($finfo,$doc->filename);
		/*
		echo "<br />";
	    echo  finfo_file($finfo,$doc->filename);
		exit();*/
		
		$filename = $doc->filename;
		if (is_file($filename)) {
			header("Content-Type: ". finfo_file($finfo,$doc->filename));
			header("Content-Disposition: attachment; filename=".basename($doc->filename));
			header("Content-Name: " . basename($doc->filename));
			$fd = fopen($filename, "r");
			while(!feof($fd)) {
				echo fread($fd, 1024 * 30);
				$this->flush_buffers();
				}
			fclose ($fd);
			exit();
		}
		

		/*header("Content-Type: ". finfo_file($finfo,$doc->filename));
		header("Content-Length: " . filesize($doc->filename));
		header("Content-Name: " . basename($doc->filename));
		
		// dump the picture and stop the script
		readfile($doc->filename);*/
		
		// dump the picture and stop the script
		//fpassthru($fp);
		exit;
	}
	
	
	
	
	function flush_buffers(){
		ob_end_flush();
		ob_flush();
		flush();
		ob_start();
	}
	
	

	
	
	
	
	
	
	
	function preview(){
		
		$this->the_task = "preview";
		$this->display();
		
	}
	
	
	function generateRedirect(){
		return JRoute::_('index.php?option='.JRequest::getVar('option')."&view=".JRequest::getVar('view',"templates"),false);
	}


}
?>